#!/usr/local/bin/python
# -*- coding: utf-8 -*-
# Copyright (c) 2013, Mayo Clinic
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
#     Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#
#     Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#
#     Neither the name of the <ORGANIZATION> nor the names of its contributors
#     may be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.

import cherrypy
import os
import sys
from config.ConfigManager import ConfigManager


_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))

# Site specific configuration variables.  These are two files because of an error (feature?)
# in cherrypy that doesn't allow 'globals' and other namespaces in the same file...
server_conf   = os.path.join(os.path.dirname(__file__), 'server.conf')
cfg_conf = os.path.join(os.path.dirname(__file__), 'settings.conf')

# Set ourselves up on the include path automatically
sys.path.append(_curdir)

ConfigManager.set_configfile(cfg_conf)

def http_methods_allowed(methods=None):
    """ Filter to pass the supplied methods unless overridden """
    if not methods: methods = ['GET', 'HEAD']
    method = cherrypy.request.method.upper()
    if method not in methods:
        cherrypy.response.headers['Allow'] = ", ".join(methods)
        raise cherrypy.HTTPError(405)


cherrypy.tools.allow = cherrypy.Tool('on_start_resource', http_methods_allowed)


cherrypy.config.environments['development'] = {
    'engine.autoreload_on': True,
    'checker.on': True,
    'tools.log_headers.on': True,
    'request.show_tracebacks': True,
    'request.show_mismatched_params': True,
    'log.screen': True}

from server.RESTDispatcher import dispatcher
conf = {'/':
         {
            'request.dispatch' : dispatcher,
            'tools.auth.on' : True,
            'tools.sessions.on' : True,
            'tools.staticdir.root': os.path.join(_curdir, "static")
         },
         '/html' : {
             'tools.staticdir.on' : True,
             'tools.staticdir.dir' : 'html'
         },
         '/favicon.ico': {'tools.staticfile.on': True,
                          'tools.staticfile.filename': os.path.join(_curdir, 'static','favicon.png')
         },
     }

def main():
    cherrypy.config.update(server_conf)
    app = cherrypy.tree.mount(None, script_name='/rf2', config=conf)
    cherrypy.quickstart(app)



if __name__ == '__main__':
    main()
